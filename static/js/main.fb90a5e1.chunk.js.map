{"version":3,"sources":["components/Search.js","App.js","index.js"],"names":["Search","useState","term","setTerm","results","setResults","console","warn","useEffect","search","a","axios","get","params","action","list","origin","format","srsearch","data","query","length","timeoutId","setTimeout","clearTimeout","renderedResults","map","result","className","href","pageid","title","dangerouslySetInnerHTML","__html","snippet","value","onChange","e","target","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MA+EeA,EA3EA,WAEX,MAAuBC,mBAAS,IAAhC,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAA6BF,mBAAS,IAAtC,mBAAOG,EAAP,KAAeC,EAAf,KAEAC,QAAQC,KAAKH,GAEbI,qBAAW,WACP,IAAMC,EAAM,uCAAG,8BAAAC,EAAA,sEACUC,IAAMC,IAAI,qCAAqC,CACjEC,OAAQ,CACJC,OAAO,QACPC,KAAK,SACLC,OAAO,IACPC,OAAO,OACPC,SAAUhB,KAPN,gBACLiB,EADK,EACLA,KAWPd,EAAWc,EAAKC,MAAMX,QAZV,2CAAH,qDAeZ,IAAIP,GAASE,EAAQiB,OAEf,CACF,IAAMC,EAAYC,YAAW,WACrBrB,GACAO,MAEN,KAEF,OAAO,WACHe,aAAaF,IATjBb,MAeN,CAACP,IAEH,IAAMuB,EAAkBrB,EAAQsB,KAAI,SAACC,GACjC,OAAO,sBAAKC,UAAU,OAAf,UACH,qBAAKA,UAAU,wBAAf,SACI,mBAAGA,UAAU,YACbC,KAAI,yCAAoCF,EAAOG,QAD/C,kBAIJ,sBAAKF,UAAU,UAAf,UACI,qBAAKA,UAAU,SAAf,SACKD,EAAOI,QAEZ,sBAAMC,wBAAyB,CAAEC,OAAQN,EAAOO,oBAM5D,OACI,gCACI,qBAAKN,UAAU,UAAf,SACI,sBAAKA,UAAU,QAAf,UACI,sDACA,uBAAOA,UAAU,QAChBO,MAAOjC,EACPkC,SAAU,SAAAC,GAAC,OAAIlC,EAAQkC,EAAEC,OAAOH,eAKzC,qBAAKP,UAAU,iBAAf,SAAiCH,QC9D9Bc,MATf,WACE,OACE,qBAAKX,UAAU,MAAf,SAEC,cAAC,EAAD,OCFLY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.fb90a5e1.chunk.js","sourcesContent":["import React,{ useState, useEffect } from \"react\";\nimport axios from 'axios';\n\n\nconst Search = () => {\n    \n    const [term,setTerm] = useState('');\n    const [results,setResults] = useState([]);\n\n    console.warn(results);\n\n    useEffect (()=> {\n        const search = async () => {\n          const { data } = await axios.get('https://en.wikipedia.org/w/api.php',{\n               params :{\n                   action:'query',\n                   list:'search',\n                   origin:'*',\n                   format:'json',\n                   srsearch: term,\n               },\n               \n           });\n\n           setResults(data.query.search);\n        }\n\n        if (term && !results.length){\n            search();\n        }else {\n            const timeoutId = setTimeout(()=>{\n                if (term){\n                    search();\n                }\n            },1000);\n      \n            return () =>{\n                clearTimeout(timeoutId);\n            }\n        }\n\n    \n        \n    },[term]);\n\n    const renderedResults = results.map((result) =>{\n        return <div className=\"item\">\n            <div className=\"right floated content\">\n                <a className=\"ui button\"\n                href={`https://en.wikipedia.org?curid=${result.pageid}`}\n                >GO</a>\n            </div>\n            <div className=\"content\">\n                <div className=\"header\">\n                    {result.title}\n                </div>\n                <span dangerouslySetInnerHTML={{ __html: result.snippet }}></span> \n                \n            </div>\n             </div>\n    })\n\n    return (\n        <div>\n            <div className=\"ui form\">\n                <div className=\"field\">\n                    <label>Enter Search Term</label>\n                    <input className=\"input\"\n                     value={term}\n                     onChange={e => setTerm(e.target.value)}\n\n                     />\n                </div>\n            </div>\n            <div className=\"ui celled list\">{renderedResults}</div>\n        </div>\n    )\n};\n\nexport default Search;","\nimport Search from './components/Search';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     \n     <Search />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}